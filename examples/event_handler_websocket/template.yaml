AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: WebSocket event handler API Gateway

Globals:
  Api:
    TracingEnabled: true
    Cors: # see CORS section
      AllowOrigin: "'https://example.com'"
      AllowHeaders: "'Content-Type,Authorization,X-Amz-Date'"
      MaxAge: "'300'"
    BinaryMediaTypes: # see Binary responses section
      - "*~1*" # converts to */* for any binary type
  Function:
    Timeout: 5
    Runtime: python3.9
    Tracing: Active
    Environment:
      Variables:
        LOG_LEVEL: INFO
        POWERTOOLS_LOGGER_SAMPLE_RATE: 0.1
        POWERTOOLS_LOGGER_LOG_EVENT: true
        POWERTOOLS_SERVICE_NAME: example
Parameters:
  LayerBucketName:
    Type: String
    Description: (Required) The name of the S3 bucket containing the powertools-for-lambda-python-poc.zip file. This will be used to deploy the Lambda Layer.
Resources:
  SimpleWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: SimpleWebSocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SimpleWebSocket
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ConnectInteg
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SimpleWebSocket
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${WebSocketHandlerFunction.Arn}/invocations
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SimpleWebSocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DisconnectInteg
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SimpleWebSocket
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${WebSocketHandlerFunction.Arn}/invocations
  JoinRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SimpleWebSocket
      RouteKey: joinroom
      AuthorizationType: NONE
      OperationName: JoinRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref JoinInteg
  JoinInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SimpleWebSocket
      Description: Send Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${WebSocketHandlerFunction.Arn}/invocations
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
    - ConnectRoute
    - JoinRoute
    - DisconnectRoute
    Properties:
      ApiId: !Ref SimpleWebSocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Dev
      Description: Dev Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref SimpleWebSocket
  LambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleArchitectures:
      - x86_64
      CompatibleRuntimes:
      - python3.9
      Content:
        S3Bucket: !Ref LayerBucketName
        S3Key: powertools-for-lambda-python-poc.zip
      Description: Powertools for Lambda (Python) POC
      LayerName: powertools-for-lambda-python-poc
  WebSocketHandlerFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - LambdaLayer
    Properties:
      CodeUri: src/
      Handler: main.main_handler
      MemorySize: 256
      Layers:
      - !Ref LambdaLayer
      Environment:
        Variables:
          MainServerAPIUrlPrefix: !Ref SimpleWebSocket
      Policies:
      - Statement:
        - Effect: Allow
          Action:
          - 'execute-api:ManageConnections'
          Resource:
          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SimpleWebSocket}/*'
  WebSocketHandlerPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref WebSocketHandlerFunction
      Principal: apigateway.amazonaws.com
Outputs:
  WebSocketURI:
    Description: "The WSS Protocol URI to connect to"
    Value: !Join ['', ['wss://', !Ref SimpleWebSocket, '.execute-api.', !Ref 'AWS::Region', '.amazonaws.com/', !Ref 'Stage']]